buildscript {
    ext {
        springBootVersion = '2.4.2'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
    id 'org.sonarqube' version '3.0'
//    id 'de.weltn24.sonarqube-conventions'

}

group = 'com.se.pet'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // TODO:
    //  runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    compile group: 'joda-time', name: 'joda-time', version: '2.3'

    // MapStruct
    compileOnly 'org.mapstruct:mapstruct-jdk8:1.2.0.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.2.0.Final'

    compile "io.springfox:springfox-swagger2:2.6.1"
    compile 'io.springfox:springfox-swagger-ui:2.6.1'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

}


test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

compileJava {
    options.compilerArgs += "-Amapstruct.defaultComponentModel=spring"
    options.compilerArgs += "-Amapstruct.unmappedTargetPolicy=WARN"
}

tasks['sonarqube'].dependsOn test


bootRun {
//    args = ["--spring.profiles.active=" + profiles]
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }

    if (project.hasProperty('debug')) {
        jvmArgs(['-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'])
    }
}







